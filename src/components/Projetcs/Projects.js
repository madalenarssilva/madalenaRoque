import React, { useEffect, useState } from "react";
import "./Projects.css";
import "../Contact/Contact.css";
import { SiFacebook, SiInstagram } from "react-icons/si";
import {
  motion,
  useViewportScroll,
  useSpring,
  useTransform,
} from "framer-motion";
import { useInView } from "react-intersection-observer";

const Projects = () => {
  const { scrollYProgress } = useViewportScroll();
  const yRange = useTransform(scrollYProgress, [0.2, 1], [0, 1]);
  const pathLength = useSpring(yRange, { stiffness: 400, damping: 90 });

  const [screenWidth, setScreenWidth] = useState(window.innerWidth);
  const { ref, inView } = useInView({
    threshold: 0.9,
    triggerOnce: true,
  });

  useEffect(() => {
    yRange.onChange((v) => console.log("yRange: ", v));
  }, [yRange]);

  useEffect(() => {
    //yRange.onChange((v) => console.log("yRange: ", v));

    const changeWidth = () => {
      setScreenWidth(window.innerWidth);
    };

    window.addEventListener("resize", changeWidth);
    return () => {
      window.addEventListener("resize", changeWidth);
    };
  }, []);

  return (
    <div className="projetos">
      {screenWidth >= 480 ? (
        <svg
          position="absolute"
          preserveAspectRatio="none"
          viewBox="0 0 1153 5382"
          left={20}
          width="100%"
          height={5382}
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <motion.path
            d={
              "m 939.947,4876.71 c 1.5,8.68 4.801,30.71 6.001,49.45 1.201,18.74 10.17,17.64 14.504,14.75 l -234.559,393.85 285.567,-446.77 138.54,14.75 -147.04,162.22 -211.051,222.08 202.552,-205.6 v 65.07 L 707.888,5379 l 10.003,-44.24 c 71.851,-148.35 216.855,-447.64 222.056,-458.05 z M 773.5,0.5 C 750.5,99 664,77 639.5,98.5 615,120 579,77 579.5,67 c 0.5,-10 30,-20 27.5,0 -2.5,20 -30.5,15.5 -59.5,14.5 -23.2,-0.8 -36,26.333 -39.5,40 -4,31 -2.4,16.426 -4,31 -2.001,18.218 -15.494,36.517 -39,53 -23.506,16.483 -69.191,69.05 -64.189,106.353 5.001,37.303 27.007,19.953 31.008,6.94 4.001,-13.013 -8.002,-55.521 -31.008,-76.341 -23.006,-20.82 -59.015,11.278 -100.526,118.849 -41.51,107.572 -74.018,69.401 -97.524,80.679 -23.506,11.278 -18.505,-62.461 -9.503,-62.461 9.003,0 0,54.653 -20.505,62.461 -20.505,7.808 -34.009,-6.073 -66.517,41.641 -32.5079,47.713 -21.5052,81.546 -25.006,90.221 -3.5009,8.675 4.001,105.837 12.003,128.392 8.002,22.555 25.506,14.748 39.01,0 13.503,-14.748 -6.502,-51.183 -26.007,-67.666 -19.5047,-16.483 -41.5102,7.807 -50.0124,16.483 -8.5021,8.675 -31.0078,49.448 -26.0065,87.618 5.0012,38.171 9.0022,109.307 -21.50548,112.777 -30.50772,3.47 39.00988,-64.196 44.01108,-19.953 5.0013,44.244 44.5113,70.269 66.0163,74.606 21.506,4.338 25.007,-36.435 25.007,-66.798 0,-30.363 -46.512,25.158 0,48.581 46.512,23.423 36.509,72.003 29.007,123.188 -7.502,51.18 -51.013,14.75 -49.512,157.89 1.5,143.14 137.534,170.9 144.536,216.01 7.002,45.11 34.509,148.34 28.507,248.97 -6.001,100.63 -58.514,127.53 -77.519,110.18 -19.005,-17.35 -7.002,-78.95 11.002,-48.58 18.005,30.36 -29.007,47.71 -49.512,84.15 -20.505,36.43 -0.5,102.36 20.505,124.05 21.005,21.69 55.014,-40.77 41.511,-54.65 -13.504,-13.88 -24.507,25.15 -23.506,61.59 1,36.44 22.505,83.28 47.012,104.97 24.506,21.69 63.45,10.41 86.021,-21.69 22.572,-32.1 -25.006,-70.27 -39.01,-31.23 -14.003,39.04 14.004,63.33 30.508,74.61 16.504,11.28 46.012,-18.22 68.517,-43.38 22.506,-25.16 40.011,-28.63 52.514,-31.23 12.503,-2.6 30.507,13.01 58.514,63.33 22.406,40.25 34.342,105.84 37.51,133.6 2.834,6.94 6.802,41.98 0,126.65 -8.502,105.84 -51.513,26.03 -72.018,117.99 -20.505,91.95 61.015,81.54 30.007,189.98 -31.007,108.44 -61.015,28.63 -88.522,94.56 -22.006,52.75 -68.851,75.76 -89.523,80.68 -1,1.16 -7.101,7.63 -23.506,24.29 -20.505,20.82 -28.507,59.86 -34.008,91.09 -4.401,24.98 -12.503,49.74 -16.004,58.99 -4.335,13.01 -17.605,44.59 -36.009,66.8 -23.006,27.76 -37.51,29.49 -64.517,37.3 -21.605,6.25 -29.674,-2.6 -31.007,-7.81 -4.502,-5.49 -12.404,-20.12 -8.002,-34.7 5.501,-18.21 20.505,-17.35 32.508,-17.35 12.003,0 37.509,36.44 33.508,113.65 -4.001,77.21 -21.005,65.06 -31.008,110.17 -10.002,45.11 9.003,64.2 23.506,79.81 14.504,15.62 32.115,6.94 39.51,0 5.916,-5.55 16.469,-23.71 21.006,-32.1 2.5,-8.09 5.101,-25.33 -4.501,-29.49 -12.003,-5.21 -22.506,27.76 -25.507,45.98 -3.001,18.22 4.501,38.17 25.507,58.99 21.005,20.82 45.511,-3.47 64.516,6.07 19.005,9.54 27.007,33.83 26.006,72.87 -1,39.04 -11.502,40.78 -45.011,86.75 -33.508,45.98 19.005,91.96 19.005,247.24 0,124.23 -24.673,218.33 -37.01,249.85 -5.167,10.41 -16.704,41.12 -21.505,80.68 -6.001,49.45 -7.502,98.89 0,133.59 7.502,34.7 30.008,85.02 58.515,113.65 22.806,22.9 57.848,37.3 72.518,41.64 27.007,7.23 87.922,17.35 115.529,0 34.509,-21.69 52.013,-53.79 62.016,-88.49 10.003,-34.7 14.504,-59.86 13.503,-80.68 -1,-20.82 -3,-37.3 -24.506,-44.24 -21.505,-6.94 -29.007,2.6 -31.508,19.09 -2.5,16.48 -7.002,39.03 -19.505,39.03 -12.503,0 -51.013,-26.02 -31.007,14.75 20.005,40.77 29.507,-29.49 27.006,-46.84 -2.5,-17.35 -34.008,-52.05 -53.513,-26.03 -19.505,26.03 -26.007,101.5 -7.502,124.92 18.505,23.43 86.522,30.37 92.023,96.3 5.502,65.93 10.503,104.1 -14.504,136.2 -25.006,32.09 -39.51,77.21 -58.514,58.99 -19.005,-18.22 -10.003,-40.78 5.001,-39.04 15.004,1.73 39.01,39.04 53.513,39.04 14.504,0 40.011,19.95 58.515,-9.55 18.505,-29.49 22.006,-49.44 47.012,-49.44 25.006,0 45.512,26.02 65.017,0 19.504,-26.03 31.508,-58.13 22.005,-64.2 -9.502,-6.07 -22.005,6.07 -22.005,23.42 0,17.35 -4.502,60.73 22.005,60.73 26.507,0 14.504,54.65 34.009,46.85 19.505,-7.81 50.012,-16.49 58.514,-46.85 8.503,-30.36 14.004,-68.53 0,-76.34 -14.003,-7.81 -28.007,10.41 -31.507,26.89 -2.801,13.19 -8.836,100.34 -11.503,142.27 -3.835,6.94 -9.203,25.16 0,42.51 11.502,21.69 38.509,-2.6 53.513,26.89 15.004,29.5 1,73.74 -10.503,78.95 -11.502,5.2 -23.005,-31.23 -11.502,-34.7 11.502,-3.47 40.01,-8.68 52.513,34.7 10.002,34.7 8.835,60.72 7.002,69.4 l -32.008,8.67 -94.524,484.08 151.538,-337.47 68.517,-137.93 c 4.335,1.45 11.703,6.94 6.502,17.35"
            }
            stroke="white"
            stroke-width="2"
            fill="transparent"
            strokeLinecap="round"
            style={{
              pathLength,
            }}
          />
        </svg>
      ) : (
        <svg
          position="absolute"
          preserveAspectRatio="none"
          viewBox="0 0 1153 5382"
          left={20}
          width="100%"
          height={5382}
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M773.5 1C750.5 99.5 664 77.5 639.5 99C615 120.5 579 77.5 579.5 67.5C580 57.5 609.5 47.5 607 67.5C604.5 87.5 576.5 83 547.5 82C524.3 81.2 511.5 108.333 508 122C504 153 505.6 138.426 504 153C501.999 171.218 488.506 189.517 465 206C441.494 222.483 395.809 275.05 400.811 312.353C405.812 349.656 427.818 332.306 431.819 319.293C435.82 306.28 423.817 263.772 400.811 242.952C377.805 222.132 341.796 254.23 300.285 361.801C258.775 469.373 226.267 431.202 202.761 442.48C179.255 453.758 184.256 380.019 193.258 380.019C202.261 380.019 193.258 434.672 172.753 442.48C152.248 450.288 138.744 436.407 106.236 484.121C73.7281 531.834 84.7308 565.667 81.23 574.342C77.7291 583.017 85.231 680.179 93.233 702.734C101.235 725.289 118.739 717.482 132.243 702.734C145.746 687.986 125.741 651.551 106.236 635.068C86.7313 618.585 64.7258 642.875 56.2236 651.551C47.7215 660.226 25.2158 700.999 30.2171 739.169C35.2183 777.34 39.2193 848.476 8.71162 851.946C-21.7961 855.416 47.7215 787.75 52.7227 831.993C57.724 876.237 97.234 902.262 118.739 906.599C140.245 910.937 143.746 870.164 143.746 839.801C143.746 809.438 97.234 864.959 143.746 888.382C190.258 911.805 180.255 960.385 172.753 1011.57C165.251 1062.75 121.74 1026.32 123.241 1169.46C124.741 1312.6 260.775 1340.36 267.777 1385.47C274.779 1430.58 302.286 1533.81 296.284 1634.44C290.283 1735.07 237.77 1761.97 218.765 1744.62C199.76 1727.27 211.763 1665.67 229.767 1696.04C247.772 1726.4 200.76 1743.75 180.255 1780.19C159.75 1816.62 179.755 1882.55 200.76 1904.24C221.765 1925.93 255.774 1863.47 242.271 1849.59C228.767 1835.71 217.764 1874.74 218.765 1911.18C219.765 1947.62 241.27 1994.46 265.777 2016.15C290.283 2037.84 329.227 2026.56 351.798 1994.46C374.37 1962.36 326.792 1924.19 312.788 1963.23C298.785 2002.27 326.792 2026.56 343.296 2037.84C359.8 2049.12 389.308 2019.62 411.813 1994.46C434.319 1969.3 451.824 1965.83 464.327 1963.23C476.83 1960.63 494.834 1976.24 522.841 2026.56C545.247 2066.81 557.183 2132.4 560.351 2160.16C563.185 2167.1 567.153 2202.14 560.351 2286.81C551.849 2392.65 508.838 2312.84 488.333 2404.8C467.828 2496.75 549.348 2486.34 518.34 2594.78C487.333 2703.22 457.325 2623.41 429.818 2689.34C407.812 2742.09 360.967 2765.1 340.295 2770.02C339.295 2771.18 333.194 2777.65 316.789 2794.31C296.284 2815.13 288.282 2854.17 282.781 2885.4C278.38 2910.38 270.278 2935.14 266.777 2944.39C262.442 2957.4 249.172 2988.98 230.768 3011.19C207.762 3038.95 193.258 3040.68 166.251 3048.49C144.646 3054.74 136.577 3045.89 135.244 3040.68C130.742 3035.19 122.84 3020.56 127.242 3005.98C132.743 2987.77 147.747 2988.63 159.75 2988.63C171.753 2988.63 197.259 3025.07 193.258 3102.28C189.257 3179.49 172.253 3167.34 162.25 3212.45C152.248 3257.56 171.253 3276.65 185.756 3292.26C200.26 3307.88 217.871 3299.2 225.266 3292.26C231.182 3286.71 241.735 3268.55 246.272 3260.16C248.772 3252.07 251.373 3234.83 241.771 3230.67C229.768 3225.46 219.265 3258.43 216.264 3276.65C213.263 3294.87 220.765 3314.82 241.771 3335.64C262.776 3356.46 287.282 3332.17 306.287 3341.71C325.292 3351.25 333.294 3375.54 332.293 3414.58C331.293 3453.62 320.791 3455.36 287.282 3501.33C253.774 3547.31 306.287 3593.29 306.287 3748.57C306.287 3872.8 281.614 3966.9 269.277 3998.42C264.11 4008.83 252.573 4039.54 247.772 4079.1C241.771 4128.55 240.27 4177.99 247.772 4212.69C255.274 4247.39 277.78 4297.71 306.287 4326.34C329.093 4349.24 364.135 4363.64 378.805 4367.98C405.812 4375.21 466.727 4385.33 494.334 4367.98C528.843 4346.29 546.347 4314.19 556.35 4279.49C566.353 4244.79 570.854 4219.63 569.853 4198.81C568.853 4177.99 566.853 4161.51 545.347 4154.57C523.842 4147.63 516.34 4157.17 513.839 4173.66C511.339 4190.14 506.837 4212.69 494.334 4212.69C481.831 4212.69 443.321 4186.67 463.327 4227.44C483.332 4268.21 492.834 4197.95 490.333 4180.6C487.833 4163.25 456.325 4128.55 436.82 4154.57C417.315 4180.6 410.813 4256.07 429.318 4279.49C447.823 4302.92 515.84 4309.86 521.341 4375.79C526.843 4441.72 531.844 4479.89 506.837 4511.99C481.831 4544.08 467.327 4589.2 448.323 4570.98C429.318 4552.76 438.32 4530.2 453.324 4531.94C468.328 4533.67 492.334 4570.98 506.837 4570.98C521.341 4570.98 546.848 4590.93 565.352 4561.43C583.857 4531.94 587.358 4511.99 612.364 4511.99C637.37 4511.99 657.876 4538.01 677.381 4511.99C696.885 4485.96 708.889 4453.86 699.386 4447.79C689.884 4441.72 677.381 4453.86 677.381 4471.21C677.381 4488.56 672.879 4531.94 699.386 4531.94C725.893 4531.94 713.89 4586.59 733.395 4578.79C752.9 4570.98 783.407 4562.3 791.909 4531.94C800.412 4501.58 805.913 4463.41 791.909 4455.6C777.906 4447.79 763.902 4466.01 760.402 4482.49C757.601 4495.68 751.566 4582.83 748.899 4624.76C745.064 4631.7 739.696 4649.92 748.899 4667.27C760.401 4688.96 787.408 4664.67 802.412 4694.16C817.416 4723.66 803.412 4767.9 791.909 4773.11C780.407 4778.31 768.904 4741.88 780.407 4738.41C791.909 4734.94 820.417 4729.73 832.92 4773.11C842.922 4807.81 841.755 4833.83 839.922 4842.51C843.423 4870.51 838.721 4938.6 791.909 4987L846 4974.5L785.5 4991V4937.5"
            stroke="white"
            strokeWidth="2"
          />
        </svg>
      )}
      {/* <img className="path" src="./completo.svg" /> */}
      {/*<img src="./1.svg" style={{ marginLeft: "3.6%" }} />*/}
      <div
        className="ellen"
        onClick={() =>
          window.open("https://ellen-exposition.netlify.app/", "_blank")
        }
      >
        <img
          src="./ellen-grid.svg"
          onMouseOver={(e) => {
            e.target.classList.add("foto_blur");
            document.getElementsByClassName("e")[0].classList.add("foto_blur");
          }}
          onMouseLeave={(e) => {
            e.target.classList.remove("foto_blur");
            document
              .getElementsByClassName("e")[0]
              .classList.remove("foto_blur");
          }}
          alt="ellen-grid"
        />
        <p className="e">ellen lupton</p>
      </div>
      {/*<img src="./2.svg" style={{ marginLeft: "30%" }} />*/}
      <div
        className="trio"
        onClick={() => window.open("https://trio-mbe.netlify.app/", "_blank")}
      >
        <img
          src="./trio.png"
          style={{ width: "550px" }}
          onMouseOver={(e) => {
            e.target.classList.add("foto_blur");
            document.getElementsByClassName("t")[0].classList.add("foto_blur");

            //document.getElementsByClassName("e").classList.add("foto_blur");
          }}
          onMouseLeave={(e) => {
            e.target.classList.remove("foto_blur");
            document
              .getElementsByClassName("t")[0]
              .classList.remove("foto_blur");
          }}
          alt="trio"
        />
        <p className="t">trio</p>
      </div>
      {/*<img src="./3.svg" style={{ marginLeft: "15%" }} />*/}
      <div
        className="ilustracao"
        onClick={() =>
          window.open("https://www.behance.net/madalenasilva1", "_blank")
        }
      >
        <img
          src="./ilustrações.png"
          onMouseOver={(e) => {
            e.target.classList.add("foto_blur");
            document.getElementsByClassName("i")[0].classList.add("foto_blur");

            //document.getElementsByClassName("e").classList.add("foto_blur");
          }}
          onMouseLeave={(e) => {
            e.target.classList.remove("foto_blur");
            document
              .getElementsByClassName("i")[0]
              .classList.remove("foto_blur");
          }}
          alt="ilustrações"
        />
        <p className="i">illustrations</p>
      </div>
      {/* CONTACTO */}
      <div className="contacto" ref={ref}>
        {inView && (
          <motion.div
            className="text"
            initial={
              {
                //TODO: pesquisar como fazer tranlate sem afetar restante layout
                // translateX: "-50vw",
                // translateY: "3001px",
              }
            }
            animate={{
              scale: [0.5, 1],
              translateX: 0,
              translateY: 0,
            }}
            transition={{
              type: "spring",
              duration: 1.5,
            }}
          >
            <p
              className="m"
              style={{
                fontFamily: "Bely BoldV",
                fontSize: "10rem",
                marginBottom: "-7rem",
              }}
            >
              More
            </p>
            <p
              className="i"
              style={{
                fontFamily: "Bely Regular",
                fontSize: "10rem",
                marginLeft: "15rem",
              }}
            >
              info?
            </p>
          </motion.div>
        )}
        {inView && (
          <motion.div
            className="media"
            initial={{
              translateX: "50vw",
            }}
            animate={{
              translateX: 0,
            }}
            transition={{
              type: "spring",
              duration: 1.5,
            }}
          >
            <SiFacebook
              data-blobity
              data-blobity-radius="30"
              data-blobity-offset-x="0"
              data-blobity-offset-y="0"
              data-blobity-magnetic="true"
              className="face"
              onClick={() =>
                window.open(
                  "https://www.facebook.com/madalenarssilva",
                  "_blank"
                )
              }
            />
            <SiInstagram
              data-blobity
              data-blobity-radius="20"
              data-blobity-offset-x="0"
              data-blobity-offset-y="0"
              data-blobity-magnetic="true"
              className="insta"
              onClick={() =>
                window.open(
                  "https://www.instagram.com/madalenarssilva/",
                  "_blank"
                )
              }
            />
          </motion.div>
        )}
      </div>
    </div>
  );
};

export default Projects;
